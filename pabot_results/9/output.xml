<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1.1 (Python 3.13.1 on win32)" generated="2025-03-09T22:30:05.441593" rpa="false" schemaversion="5">
<suite id="s1" name="CreateOrder" source="C:\automation\AutomationGeneric\LvrplSL\CreateOrder">
<suite id="s1-s1" name="CreateOrderPos create normal order ClickandCollect TC 009" source="C:\automation\AutomationGeneric\LvrplSL\CreateOrder\CreateOrderPos_create_normal_order_ClickandCollect_TC_009">
<suite id="s1-s1-s1" name="Test" source="C:\automation\AutomationGeneric\LvrplSL\CreateOrder\CreateOrderPos_create_normal_order_ClickandCollect_TC_009\test">
<suite id="s1-s1-s1-s1" name="TC 009" source="C:\automation\AutomationGeneric\LvrplSL\CreateOrder\CreateOrderPos_create_normal_order_ClickandCollect_TC_009\test\TC_009.robot">
<test id="s1-s1-s1-s1-t1" name="Create Order TC_001" line="13">
<kw name="Creating Session1" owner="createSession">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-03-09T22:30:06.370063" level="INFO">${auth} = ['admin', 'password']</msg>
<var>${auth}</var>
<arg>${user}</arg>
<arg>${passwd}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-03-09T22:30:06.369842" elapsed="0.000251"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-03-09T22:30:06.370488" level="INFO">Creating Session using : alias=AddData, url=http://9.30.26.220:9080/smcfs/restapi/invoke/createOrder, headers={'Content-Type': 'application/xml', 'Authorization': 'Basic YWRtaW46cGFzc3dvcmQ='},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x000001F4C1109D30&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>${AddData}</arg>
<arg>url=${base_url_api}${createOrder}</arg>
<arg>headers=${headers}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-03-09T22:30:06.370202" elapsed="0.000438"/>
</kw>
<arg>AddData</arg>
<status status="PASS" start="2025-03-09T22:30:06.369123" elapsed="0.001584"/>
</kw>
<kw name="Manage Item With Dynamic Item" owner="Prepare_Xml_Content">
<msg time="2025-03-09T22:30:08.372681" level="INFO">before mod &lt;ItemList&gt;
	&lt;Item Action="Manage" GlobalItemID="12439482" ItemID="$ItemID" OrganizationCode="Liverpool" UnitOfMeasure="UN"&gt;
		&lt;Extn ExtnActive="01" ExtnItemSF="Y" ExtnItemSFDesc="ACTIVO" ExtnSuggestedPackage="" ExtnSkuPackage=""/&gt;
		&lt;PrimaryInformation DefaultProductClass="SL" Description="CHAROLA GIRATORIA AILE, 48CM, NATURAL H" ShortDescription="CHAROLA GIRATORIA AILE, 48CM, NATURAL H" ExtendedDisplayDescription="CHAROLA GIRATORIA REDO, 48 CM, NATURAL (12439482)" IsDeliveryAllowed="Y" IsPickupAllowed="Y" IsShippingAllowed="Y" PrimaryEnterpriseCode="Liverpool" SerializedFlag="N" Status="3000" UnitCost="829" ItemType=""/&gt;
		&lt;ClassificationCodes ECCNNo="HAUS" Model="18917" NAICSCode="7502008630089" NMFCClass="152" NMFCCode="15204"/&gt;
		&lt;InventoryParameters ATPRule="Liverpool_ATP" InventoryMonitorRule="EPL_ATP_MONITOR_RULE" NodeLevelInventoryMonitorRule="EPL_ATP_MONITOR_RULE"/&gt;
		&lt;ItemAliasList Reset="Y"&gt;
			&lt;ItemAlias AliasName="EAN1" AliasValue="7502008630089"/&gt;
		&lt;/ItemAliasList&gt;
	&lt;/Item&gt;
&lt;/ItemList&gt;
after mod &lt;ItemList&gt;
	&lt;Item Action="Manage" GlobalItemID="12439482" ItemID="20250309223006371" OrganizationCode="Liverpool" UnitOfMeasure="UN"&gt;
		&lt;Extn ExtnActive="01" ExtnItemSF="Y" ExtnItemSFDesc="ACTIVO" ExtnSuggestedPackage="" ExtnSkuPackage=""/&gt;
		&lt;PrimaryInformation DefaultProductClass="SL" Description="CHAROLA GIRATORIA AILE, 48CM, NATURAL H" ShortDescription="CHAROLA GIRATORIA AILE, 48CM, NATURAL H" ExtendedDisplayDescription="CHAROLA GIRATORIA REDO, 48 CM, NATURAL (12439482)" IsDeliveryAllowed="Y" IsPickupAllowed="Y" IsShippingAllowed="Y" PrimaryEnterpriseCode="Liverpool" SerializedFlag="N" Status="3000" UnitCost="829" ItemType=""/&gt;
		&lt;ClassificationCodes ECCNNo="HAUS" Model="18917" NAICSCode="7502008630089" NMFCClass="152" NMFCCode="15204"/&gt;
		&lt;InventoryParameters ATPRule="Liverpool_ATP" InventoryMonitorRule="EPL_ATP_MONITOR_RULE" NodeLevelInventoryMonitorRule="EPL_ATP_MONITOR_RULE"/&gt;
		&lt;ItemAliasList Reset="Y"&gt;
			&lt;ItemAlias AliasName="EAN1" AliasValue="7502008630089"/&gt;
		&lt;/ItemAliasList&gt;
	&lt;/Item&gt;
&lt;/ItemList&gt;</msg>
<msg time="2025-03-09T22:30:08.372871" level="INFO">${manageItemJson} = &lt;ItemList&gt;
	&lt;Item Action="Manage" GlobalItemID="12439482" ItemID="20250309223006371" OrganizationCode="Liverpool" UnitOfMeasure="UN"&gt;
		&lt;Extn ExtnActive="01" ExtnItemSF="Y" ExtnItemSFDesc="ACTIVO" Ext...</msg>
<var>${manageItemJson}</var>
<arg>C:\\automation\\AutomationGeneric\\LvrplSL\\CreateOrder\\CreateOrderPos_create_normal_order_ClickandCollect_TC_009\\test</arg>
<status status="PASS" start="2025-03-09T22:30:06.370791" elapsed="2.002107"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-03-09T22:30:09.052084" level="INFO">POST Request : url=http://9.30.26.220:9080/smcfs/restapi/invoke/manageItem 
 path_url=/smcfs/restapi/invoke/manageItem 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/xml', 'Authorization': 'Basic YWRtaW46cGFzc3dvcmQ=', 'Content-Length': '1025'} 
 body=&lt;ItemList&gt;
	&lt;Item Action="Manage" GlobalItemID="12439482" ItemID="20250309223006371" OrganizationCode="Liverpool" UnitOfMeasure="UN"&gt;
		&lt;Extn ExtnActive="01" ExtnItemSF="Y" ExtnItemSFDesc="ACTIVO" ExtnSuggestedPackage="" ExtnSkuPackage=""/&gt;
		&lt;PrimaryInformation DefaultProductClass="SL" Description="CHAROLA GIRATORIA AILE, 48CM, NATURAL H" ShortDescription="CHAROLA GIRATORIA AILE, 48CM, NATURAL H" ExtendedDisplayDescription="CHAROLA GIRATORIA REDO, 48 CM, NATURAL (12439482)" IsDeliveryAllowed="Y" IsPickupAllowed="Y" IsShippingAllowed="Y" PrimaryEnterpriseCode="Liverpool" SerializedFlag="N" Status="3000" UnitCost="829" ItemType=""/&gt;
		&lt;ClassificationCodes ECCNNo="HAUS" Model="18917" NAICSCode="7502008630089" NMFCClass="152" NMFCCode="15204"/&gt;
		&lt;InventoryParameters ATPRule="Liverpool_ATP" InventoryMonitorRule="EPL_ATP_MONITOR_RULE" NodeLevelInventoryMonitorRule="EPL_ATP_MONITOR_RULE"/&gt;
		&lt;ItemAliasList Reset="Y"&gt;
			&lt;ItemAlias AliasName="EAN1" AliasValue="7502008630089"/&gt;
		&lt;/ItemAliasList&gt;
	&lt;/Item&gt;
&lt;/ItemList&gt; 
 </msg>
<msg time="2025-03-09T22:30:09.052184" level="INFO">POST Response : url=http://9.30.26.220:9080/smcfs/restapi/invoke/manageItem 
 status=204, reason=No Content 
 headers={'X-Powered-By': 'Servlet/4.0', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'X-UA-Compatible': 'IE=EmulateIE8', 'Access-Control-Allow-Origin': '*', 'Access-Control-Max-Age': '3600', 'Access-Control-Allow-Credentials': 'true', 'Content-Language': 'en-US', 'Content-Length': '0', 'Date': 'Sun, 09 Mar 2025 17:00:09 GMT'} 
 body=None 
 </msg>
<msg time="2025-03-09T22:30:09.052285" level="INFO">${manageItemResponse} = &lt;Response [204]&gt;</msg>
<var>${manageItemResponse}</var>
<arg>AddData</arg>
<arg>${base_url_api}${manageItem}</arg>
<arg>data=${manageItemJson}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-03-09T22:30:08.373179" elapsed="0.679128"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>204</arg>
<arg>${manageItemResponse}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2025-03-09T22:30:09.052482" elapsed="0.000338"/>
</kw>
<kw name="Manage Item With Dynamic Item1" owner="Prepare_Xml_Content">
<msg time="2025-03-09T22:30:09.053457" level="INFO">after mod &lt;ItemList&gt;
	&lt;Item Action="Manage" GlobalItemID="12439482" ItemID="20250309223006371" OrganizationCode="Liverpool" UnitOfMeasure="UN"&gt;
		&lt;Extn ExtnActive="01" ExtnItemSF="Y" ExtnItemSFDesc="ACTIVO" ExtnSuggestedPackage="" ExtnSkuPackage=""/&gt;
		&lt;PrimaryInformation DefaultProductClass="SL" Description="CHAROLA GIRATORIA AILE, 48CM, NATURAL H" ShortDescription="CHAROLA GIRATORIA AILE, 48CM, NATURAL H" ExtendedDisplayDescription="CHAROLA GIRATORIA REDO, 48 CM, NATURAL (12439482)" IsDeliveryAllowed="Y" IsPickupAllowed="Y" IsShippingAllowed="Y" PrimaryEnterpriseCode="Liverpool" SerializedFlag="N" Status="3000" UnitCost="829" ItemType=""/&gt;
		&lt;ClassificationCodes ECCNNo="HAUS" Model="18917" NAICSCode="7502008630089" NMFCClass="152" NMFCCode="15204"/&gt;
		&lt;InventoryParameters ATPRule="Liverpool_ATP" InventoryMonitorRule="EPL_ATP_MONITOR_RULE" NodeLevelInventoryMonitorRule="EPL_ATP_MONITOR_RULE"/&gt;
		&lt;ItemAliasList Reset="Y"&gt;
			&lt;ItemAlias AliasName="EAN1" AliasValue="7502008630089"/&gt;
		&lt;/ItemAliasList&gt;
	&lt;/Item&gt;
&lt;/ItemList&gt;</msg>
<msg time="2025-03-09T22:30:09.053712" level="INFO">${jsonItemId} = {'ItemList': {'Item': {'_Action': 'Manage', '_GlobalItemID': '12439482', '_ItemID': '20250309223006371', '_OrganizationCode': 'Liverpool', '_UnitOfMeasure': 'UN', 'Extn': {'_ExtnActive': '01', '_ExtnI...</msg>
<var>${jsonItemId}</var>
<arg>C:\\automation\\AutomationGeneric\\LvrplSL\\CreateOrder\\CreateOrderPos_create_normal_order_ClickandCollect_TC_009\\test</arg>
<status status="PASS" start="2025-03-09T22:30:09.052943" elapsed="0.000793"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${jsonItemId}</arg>
<arg>ItemList</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-03-09T22:30:09.053845" elapsed="0.000163"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-03-09T22:30:09.054300" level="INFO">${Item_ID_Path} = {'Item': {'_Action': 'Manage', '_GlobalItemID': '12439482', '_ItemID': '20250309223006371', '_OrganizationCode': 'Liverpool', '_UnitOfMeasure': 'UN', 'Extn': {'_ExtnActive': '01', '_ExtnItemSF': 'Y', ...</msg>
<var>${Item_ID_Path}</var>
<arg>${jsonItemId}</arg>
<arg>ItemList</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-03-09T22:30:09.054125" elapsed="0.000197"/>
</kw>
<kw name="Adjust Inventory File" owner="Prepare_Xml_Content">
<msg time="2025-03-09T22:30:09.054736" level="INFO">${jsonAdjInv} = &lt;Items&gt;
	&lt;Item AdjustmentType="ABSOLUTE" Availability="TRACK" ItemID="20250309223006371" OrganizationCode="Liverpool" Quantity="100" ReasonCode="itemSLRTAMS19t2" ReasonText="Ajuste GoldenGate" ShipNod...</msg>
<var>${jsonAdjInv}</var>
<arg>${jsonItemId}[ItemList][Item][_ItemID]</arg>
<arg>C:\\automation\\AutomationGeneric\\LvrplSL\\CreateOrder\\CreateOrderPos_create_normal_order_ClickandCollect_TC_009\\test</arg>
<status status="PASS" start="2025-03-09T22:30:09.054407" elapsed="0.000367"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-03-09T22:30:09.414452" level="INFO">POST Request : url=http://9.30.26.220:9080/smcfs/restapi/invoke/adjustInventory 
 path_url=/smcfs/restapi/invoke/adjustInventory 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/xml', 'Authorization': 'Basic YWRtaW46cGFzc3dvcmQ=', 'Content-Length': '256'} 
 body=&lt;Items&gt;
	&lt;Item AdjustmentType="ABSOLUTE" Availability="TRACK" ItemID="20250309223006371" OrganizationCode="Liverpool" Quantity="100" ReasonCode="itemSLRTAMS19t2" ReasonText="Ajuste GoldenGate" ShipNode="77" SupplyType="ONHAND" UnitOfMeasure="UN"/&gt;
&lt;/Items&gt; 
 </msg>
<msg time="2025-03-09T22:30:09.414647" level="INFO">POST Response : url=http://9.30.26.220:9080/smcfs/restapi/invoke/adjustInventory 
 status=204, reason=No Content 
 headers={'X-Powered-By': 'Servlet/4.0', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'X-UA-Compatible': 'IE=EmulateIE8', 'Access-Control-Allow-Origin': '*', 'Access-Control-Max-Age': '3600', 'Access-Control-Allow-Credentials': 'true', 'Content-Language': 'en-US', 'Content-Length': '0', 'Date': 'Sun, 09 Mar 2025 17:00:09 GMT'} 
 body=None 
 </msg>
<msg time="2025-03-09T22:30:09.414889" level="INFO">${adjInvresponse} = &lt;Response [204]&gt;</msg>
<var>${adjInvresponse}</var>
<arg>AddData</arg>
<arg>${base_url_api}${adjustInventory}</arg>
<arg>data=${jsonAdjInv}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-03-09T22:30:09.054924" elapsed="0.360032"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>204</arg>
<arg>${adjInvresponse}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2025-03-09T22:30:09.415340" elapsed="0.000680"/>
</kw>
<kw name="Find Inventory File" owner="Prepare_Xml_Content">
<msg time="2025-03-09T22:30:09.417358" level="INFO">${jsonfindInventory} = &lt;Promise AllocationRuleID="FWD_RULES" CheckInventory="Y" EnterpriseCode="Liverpool" FulfillmentType="Fulfillment_Type_Liverpool"
 OrganizationCode="Liverpool"&gt;
	&lt;ShipToAddress Country="MX" ZipCode="98...</msg>
<var>${jsonfindInventory}</var>
<arg>${jsonItemId}[ItemList][Item][_ItemID]</arg>
<arg>C:\\automation\\AutomationGeneric\\LvrplSL\\CreateOrder\\CreateOrderPos_create_normal_order_ClickandCollect_TC_009\\test</arg>
<status status="PASS" start="2025-03-09T22:30:09.416329" elapsed="0.001108"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-03-09T22:30:09.926455" level="INFO">POST Request : url=http://9.30.26.220:9080/smcfs/restapi/invoke/findInventory 
 path_url=/smcfs/restapi/invoke/findInventory 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/xml', 'Authorization': 'Basic YWRtaW46cGFzc3dvcmQ=', 'Content-Length': '341'} 
 body=&lt;Promise AllocationRuleID="FWD_RULES" CheckInventory="Y" EnterpriseCode="Liverpool" FulfillmentType="Fulfillment_Type_Liverpool"
 OrganizationCode="Liverpool"&gt;
	&lt;ShipToAddress Country="MX" ZipCode="98047"/&gt;
	&lt;PromiseLines&gt;
		&lt;PromiseLine ItemID="20250309223006371" LineId="1" RequiredQty="20" UnitOfMeasure="UN"/&gt;
	&lt;/PromiseLines&gt;
&lt;/Promise&gt; 
 </msg>
<msg time="2025-03-09T22:30:09.926549" level="INFO">POST Response : url=http://9.30.26.220:9080/smcfs/restapi/invoke/findInventory 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Servlet/4.0', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'X-UA-Compatible': 'IE=EmulateIE8', 'Access-Control-Allow-Origin': '*', 'Access-Control-Max-Age': '3600', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Encoding': 'gzip', 'Content-Language': 'en-US', 'Content-Length': '167', 'Connection': 'Close', 'Date': 'Sun, 09 Mar 2025 17:00:10 GMT'} 
 body={"errors":[{"ErrorDescription":"Error description not available","ErrorCode":"java.lang.NullPointerException","MoreInfo":{"UserExit":"yfs.ue.processRoutingExternally.class"},"httpcode":400}]} 
 </msg>
<msg time="2025-03-09T22:30:09.926676" level="FAIL">HTTPError: 400 Client Error: Bad Request for url: http://9.30.26.220:9080/smcfs/restapi/invoke/findInventory</msg>
<var>${findInventoryResponse}</var>
<arg>AddData</arg>
<arg>${base_url_api}${findInventory}</arg>
<arg>data=${jsonfindInventory}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-03-09T22:30:09.417741" elapsed="0.510579">HTTPError: 400 Client Error: Bad Request for url: http://9.30.26.220:9080/smcfs/restapi/invoke/findInventory</status>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<var>${resp}</var>
<arg>${findInventoryResponse.json()}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" start="2025-03-09T22:30:09.928644" elapsed="0.000085"/>
</kw>
<kw name="Write Output File" owner="Prepare_Xml_Content">
<arg>${resp}</arg>
<arg>'findInv'</arg>
<arg>C:\\automation\\AutomationGeneric\\LvrplSL\\CreateOrder\\CreateOrderPos_create_normal_order_ClickandCollect_TC_009\\test</arg>
<status status="NOT RUN" start="2025-03-09T22:30:09.928840" elapsed="0.000050"/>
</kw>
<kw name="Create Order File" owner="Prepare_Xml_Content">
<var>${jsonCreateOrder}</var>
<arg>${jsonItemId}[ItemList][Item][_ItemID]</arg>
<arg>C:\\automation\\AutomationGeneric\\LvrplSL\\CreateOrder\\CreateOrderPos_create_normal_order_ClickandCollect_TC_009\\test</arg>
<status status="NOT RUN" start="2025-03-09T22:30:09.928967" elapsed="0.000043"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${createOrderResponse}</var>
<arg>AddData</arg>
<arg>${base_url_api}${createOrder}</arg>
<arg>data=${jsonCreateOrder}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-03-09T22:30:09.929085" elapsed="0.000042"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<var>${resp2}</var>
<arg>${createOrderResponse.json()}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" start="2025-03-09T22:30:09.929330" elapsed="0.000070"/>
</kw>
<kw name="Write Output File" owner="Prepare_Xml_Content">
<arg>${resp2}</arg>
<arg>'createOrder'</arg>
<arg>C:\\automation\\AutomationGeneric\\LvrplSL\\CreateOrder\\CreateOrderPos_create_normal_order_ClickandCollect_TC_009\\test</arg>
<status status="NOT RUN" start="2025-03-09T22:30:09.929488" elapsed="0.000046"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${createOrderResponse}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-03-09T22:30:09.929610" elapsed="0.000042"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d-%H%M</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="NOT RUN" start="2025-03-09T22:30:09.929724" elapsed="0.000042"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${createOrderResponse.json()}</arg>
<arg>OrderNo</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-03-09T22:30:09.929840" elapsed="0.000041"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${Order_No}</var>
<arg>${createOrderResponse.json()}</arg>
<arg>OrderNo</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-03-09T22:30:09.929953" elapsed="0.000040"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${createOrderResponse.json()}</arg>
<arg>OrderHeaderKey</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-03-09T22:30:09.930064" elapsed="0.000039"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${Order_Header_Key}</var>
<arg>${createOrderResponse.json()}</arg>
<arg>OrderHeaderKey</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-03-09T22:30:09.930174" elapsed="0.000042"/>
</kw>
<kw name="Append Excel File1" owner="read_write_all_excel">
<arg>${file}</arg>
<arg>${Order_No}</arg>
<arg>${TEST NAME}</arg>
<arg>${timestamp}</arg>
<arg>${jsonCreateOrder}</arg>
<arg>${createOrderResponse.json()}</arg>
<status status="NOT RUN" start="2025-03-09T22:30:09.930288" elapsed="0.000041"/>
</kw>
<tag>CREATEORDER</tag>
<tag>HAPPYFLOW</tag>
<tag>REGRESSION</tag>
<status status="FAIL" start="2025-03-09T22:30:06.368539" elapsed="3.561936">HTTPError: 400 Client Error: Bad Request for url: http://9.30.26.220:9080/smcfs/restapi/invoke/findInventory</status>
</test>
<status status="FAIL" start="2025-03-09T22:30:05.483452" elapsed="4.447413"/>
</suite>
<status status="FAIL" start="2025-03-09T22:30:05.482498" elapsed="4.448855"/>
</suite>
<status status="FAIL" start="2025-03-09T22:30:05.481432" elapsed="4.450324"/>
</suite>
<status status="FAIL" start="2025-03-09T22:30:05.465399" elapsed="4.466724"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">CREATEORDER</stat>
<stat pass="0" fail="1" skip="0">HAPPYFLOW</stat>
<stat pass="0" fail="1" skip="0">REGRESSION</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="CreateOrder">CreateOrder</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1" name="CreateOrderPos create normal order ClickandCollect TC 009">CreateOrder.CreateOrderPos create normal order ClickandCollect TC 009</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1" name="Test">CreateOrder.CreateOrderPos create normal order ClickandCollect TC 009.Test</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1-s1" name="TC 009">CreateOrder.CreateOrderPos create normal order ClickandCollect TC 009.Test.TC 009</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
